swagger: '2.0'
info:
  description: OpenApi for rumaji
  version: 1.0.0
  title: Rumaji
  termsOfService: 'http://rumaji.com/terms/'
  contact:
    email: apiteam@rumaji.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:8080'
basePath: /v2
tags:
  - name: story
    description: Everything about Story
    externalDocs:
      description: Story Docs
      url: 'http://docs.rumaji.com/story'
schemes:
  - http
paths:
  /story/find:
    get:
      tags:
        - story
      summary: Find story
      description: find story
      operationId: findStory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: query
          name: status
          type: string
          description: The status of story to return.
        - in: query
          name: title
          type: string
          description: The title of story to return.
        - in: query
          name: tags
          type: string
          description: The tags of story to return.
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Story'
        '405':
          description: Invalid input
  /story:
    post:
      tags:
        - story
      summary: Add a new story to the collection
      description: collection of story
      operationId: addStory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: story
          description: Story object that needs to be added to the collection
          schema:
            type: object
            required:
              - title
              - content
            properties:
              title:
                type: string
                example: jalan yang panjang
              content:
                type: string
                example: pada sore hari yang dingin dan sepi
      responses:
        '201':
          description: Created
        '405':
          description: Invalid input
    get:
      tags:
        - story
      summary: Get story from collection
      description: collection of story
      operationId: getStory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Story'
        '400':
          description: Invalid status value
  '/story/{storyId}':
    put:
      tags:
        - story
      summary: Update story from collection
      description: collection of story
      operationId: updateStory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: storyId
          description: ID of story to return
          required: true
          type: integer
          format: int64
        - in: body
          name: story
          description: Story object that needs to be added to the collection
          schema:
            type: object
            required:
              - title
              - content
            properties:
              title:
                type: string
                example: jalan yang panjang
              content:
                type: string
                example: pada sore hari yang dingin dan sepi
      responses:
        '200':
          description: Updated
        '405':
          description: Invalid input
    delete:
      tags:
        - story
      summary: Delete from collection
      description: delete story
      operationId: deleteStory
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: storyId
          description: ID of story return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Deleted
  '/story/{storyId}/publish':
    post:
      tags:
        - story
      summary: Publish story
      description: publish story
      operationId: postPublishStory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: storyId
          description: ID of story to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Published
        '405':
          description: Invalid input
  '/story/{storyId}/draft':
    post:
      tags:
        - story
      summary: Draft story
      description: draft story
      operationId: postDraftStory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: storyId
          description: ID of story to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Drafted
        '405':
          description: Invalid input
securityDefinitions:
  story_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:stories': modify stories in your account
      'read:stories': read your stories
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Story:
    type: object
    required:
      - title
      - content
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      title:
        type: string
        example: jalan yang panjang
      content:
        type: string
        example: pada sore hari yang dingin dan sepi
      status:
        type: string
        enum:
          - published
          - draft
          - deleted
    xml:
      name: Story
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
